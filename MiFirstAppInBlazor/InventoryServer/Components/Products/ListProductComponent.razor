@using Business
@using Entities
@inject IB_Product _product
@inject IB_Category _category


    <select class="form-control" @onchange="CategoryChange">
        <option value="">Seleccione categoría...</option>
        @foreach (var category in categories)
        {
            <option value="@category.CategoryId">@category.CategoryName</option>
        }
    </select>

<hr />

    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th> Referencia </th>
                <th>Nombre del producto</th>
                <th>Categoría</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in tempProducts)
            {
                <tr>
                    <td>@product.ProductId</td>
                    <td>@product.ProductName</td>
                    <td>@product.Category?.CategoryName</td>
                    <td><a href="product/edit/@product.ProductId">Editar</a></td>
                </tr>
            }
        </tbody>
    </table>



@code {
    IList<ProductEntity> products = new List<ProductEntity>();
    IList<ProductEntity> tempProducts = new List<ProductEntity>();
    IList<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        products = _product.ListProduct();
        tempProducts = products;
        categories = _category.CategoryList();
    }

    private void CategoryChange(ChangeEventArgs e)
    {
        tempProducts = products.Where(c=> c.CategoryId == e.Value.ToString()).ToList();
    }

}
