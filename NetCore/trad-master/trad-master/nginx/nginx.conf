user nginx;

worker_processes    auto;

events { worker_connections 1024; }

http {
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    log_format upstream_time '$remote_addr $http_x_forwarded_for - $remote_user [$time_local] '
                             '$ssl_protocol "$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
    access_log /var/log/nginx/access.log upstream_time;

    include         /etc/nginx/proxy.conf;
    include         /etc/nginx/mime.types;
    limit_req_zone  $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens   off;

    sendfile on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    upstream webapi {
        server api:5000;
    }

    upstream storage {
        server storage:9000;
    }

    upstream front {
        server nuxt:3000;
    }

    map $sent_http_content_type $expires {
        "text/html"                 epoch;
        "text/html; charset=utf-8"  epoch;
        default                     off;
    }

    server {
      server_name treading.ml;
      #listen      80 default_server;

      listen              443 ssl;
      keepalive_timeout   70;

      ssl_certificate     certificate.crt;
      ssl_certificate_key private.key;
      ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

      gzip            on;
      gzip_types      text/plain application/xml text/css application/javascript;
      gzip_min_length 1000;

      location /api/ {
          proxy_pass http://webapi;
          limit_req  zone=one burst=10 nodelay;
      }
      location / {
          proxy_pass http://front;
          proxy_set_header Host $host;
          limit_req  zone=one burst=10 nodelay;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
    }
    server {
      server_name cdn.treading.ml;
      listen      80 default_server;
      # To allow special characters in headers
     ignore_invalid_headers off;
     # Allow any size file to be uploaded.
     # Set to a value such as 1000m; to restrict file size to a specific value
     client_max_body_size 0;
     # To disable buffering
     proxy_buffering off;

     location / {
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header Host $http_host;

       proxy_connect_timeout 300;
       # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       chunked_transfer_encoding off;

       proxy_pass http://storage; # If you are using docker-compose this would be the hostname i.e. minio
       # Health Check endpoint might go here. See https://www.nginx.com/resources/wiki/modules/healthcheck/
       # /minio/health/live;
     }
    }

}
