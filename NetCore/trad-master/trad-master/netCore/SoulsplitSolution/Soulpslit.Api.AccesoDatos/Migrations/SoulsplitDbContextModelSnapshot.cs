// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Soulpslit.Api.AccesoDatos;

namespace Soulsplit.Api.AccesoDatos.Migrations
{
    [DbContext(typeof(SoulsplitDbContext))]
    partial class SoulsplitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.AuditoriaAccesoUsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoConfirmacion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AuditoriaAccesoUsuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.BancoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("IX_CodigoBanco");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.CuentaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BancoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombres")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("NumeroCuenta")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<Guid>("TipoCuentaId")
                        .HasColumnType("uuid");

                    b.Property<string>("TipoIdentificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("TipoCuentaId");

                    b.HasIndex("NumeroCuenta", "BancoId", "TipoCuentaId")
                        .IsUnique()
                        .HasDatabaseName("IX_CuentaBancoTipoCuenta");

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.DetalleEstadoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<Guid>("EstadoEnumeracionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("EstadoEnumeracionId");

                    b.HasIndex("Nombre", "Estado")
                        .IsUnique()
                        .HasDatabaseName("IX_NombreDetalleEstado");

                    b.ToTable("DetalleEstado");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.EstadoEnumeracionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("IX_NombreEstado");

                    b.ToTable("EstadoEnumeracion");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.FormaPagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Componente")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("IX_CodigoformaPago");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.FuncionalidadEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreFuncionalidad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("NombreFuncionalidad")
                        .IsUnique()
                        .HasDatabaseName("IX_NombreFuncionalidad");

                    b.ToTable("Funcionalidades");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.FuncionalidadParametroSistemaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("FuncionalidadId")
                        .HasColumnType("uuid");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("ParametroSistemaId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("FuncionalidadId");

                    b.HasIndex("ParametroSistemaId");

                    b.ToTable("FuncionalidadesParametroSistema");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.HistorialPagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comprobante")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("EstadoConciliacion")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<Guid>("EstadoPagoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaRespuesta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreOperador")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("Observacion")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar");

                    b.Property<Guid>("PagoId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("EstadoPagoId");

                    b.HasIndex("PagoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistorialPago");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.MenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("IconoMenu")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("NombrePagina")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PadreId")
                        .HasColumnType("uuid");

                    b.Property<bool>("PorDefecto")
                        .HasColumnType("boolean");

                    b.Property<string>("UrlMenu")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("PadreId");

                    b.HasIndex("NombrePagina", "PadreId")
                        .IsUnique()
                        .HasDatabaseName("IX_NombrePagina");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Autorizacion")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("Comprobante")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("CuentaDeposito")
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.Property<Guid>("CuentaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<Guid>("EstadoPagoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaAprobacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("FormaPagoId")
                        .HasColumnType("uuid");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("IdImagen")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("IdTransaccional")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(13)
                        .HasColumnType("varchar");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreOperador")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombres")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("NumeroTarjeta")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Recibo")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("Referencia")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("RequestId")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("RespuestaCDN")
                        .HasColumnType("varchar");

                    b.Property<string>("TipoIdentificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("UsuarioConciliacionId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(20, 6)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("EstadoPagoId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("UsuarioConciliacionId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PaisEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bandera")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("CodigoPais")
                        .HasMaxLength(7)
                        .HasColumnType("varchar");

                    b.Property<string>("CodigoRegional")
                        .HasMaxLength(7)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<string>("Nacionalidad")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("NombrePais")
                        .IsUnique()
                        .HasDatabaseName("IX_NombrePais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.ParametroSistemaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DescripcionParametro")
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreParametro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Valor1")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar");

                    b.Property<string>("Valor2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Valor3")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("NombreParametro")
                        .IsUnique()
                        .HasDatabaseName("IX_NombreParametro");

                    b.ToTable("ParametrosSistema");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PersonaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Compuesto")
                        .HasMaxLength(300)
                        .HasColumnType("varchar");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombres")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("TelefonoPaisId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TipoIdentificacionId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Identificacion")
                        .IsUnique()
                        .HasDatabaseName("IX_Identificacion");

                    b.HasIndex("TelefonoPaisId");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.ReferidosPersonaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReferidoId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("ReferidosPersona");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.RolEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<bool>("RolInstalacion")
                        .HasColumnType("boolean");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("NombreRol")
                        .IsUnique()
                        .HasDatabaseName("IX_NombreRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.RolMenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DetalleEstadoEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("DetalleEstadoEntityId");

                    b.HasIndex("RolId");

                    b.HasIndex("MenuId", "RolId")
                        .IsUnique()
                        .HasDatabaseName("IX_MenuRol");

                    b.ToTable("RolMenu");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.RolUsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("RolId", "UsuarioId")
                        .IsUnique()
                        .HasDatabaseName("IX_RolUsuario");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoCuentaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("IX_CodigoTipoCuenta");

                    b.ToTable("TipoCuenta");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoIdentificacionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AlgoritmoValidacion")
                        .HasColumnType("varchar");

                    b.Property<bool>("AplicaNacionalidad")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<short>("LongitudMaxima")
                        .HasColumnType("smallint");

                    b.Property<short>("LongitudMinima")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TipoPersonaId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("TipoIdentificacion");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoPersonaEntiy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TipoPersona");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("boolean");

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("CodigoOTP")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("CodigoReferencia")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FotoUsuario")
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameCreacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("HostNameModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.Property<short?>("NumeroIntentos")
                        .HasColumnType("smallint");

                    b.Property<bool>("OlvidoClave")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uuid");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar");

                    b.Property<bool>("SesionActiva")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(80)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("VencimientoToken")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("VerificoCelular")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_EmailUsuario");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.AuditoriaAccesoUsuarioEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", "Usuario")
                        .WithMany("AuditoriaAccesoUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.CuentaEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.BancoEntity", "Banco")
                        .WithMany("Cuentas")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.TipoCuentaEntity", "TipoCuenta")
                        .WithMany("Cuentas")
                        .HasForeignKey("TipoCuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("TipoCuenta");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.DetalleEstadoEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.EstadoEnumeracionEntity", "EstadoEnumeracion")
                        .WithMany("Detalles")
                        .HasForeignKey("EstadoEnumeracionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoEnumeracion");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.FuncionalidadParametroSistemaEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.FuncionalidadEntity", "Funcionalidad")
                        .WithMany("FuncionalidadesParametroSistema")
                        .HasForeignKey("FuncionalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.ParametroSistemaEntity", "ParametroSistema")
                        .WithMany("FuncionalidadesParametroSiste")
                        .HasForeignKey("ParametroSistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionalidad");

                    b.Navigation("ParametroSistema");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.HistorialPagoEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.DetalleEstadoEntity", "EstadoPago")
                        .WithMany()
                        .HasForeignKey("EstadoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.PagoEntity", "Pago")
                        .WithMany("HistorialPagos")
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPago");

                    b.Navigation("Pago");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.MenuEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.MenuEntity", "Padre")
                        .WithMany()
                        .HasForeignKey("PadreId");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PagoEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.CuentaEntity", "Cuenta")
                        .WithMany("Pagos")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.DetalleEstadoEntity", "EstadoPago")
                        .WithMany()
                        .HasForeignKey("EstadoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.FormaPagoEntity", "FormaPago")
                        .WithMany("Pagos")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.PersonaEntity", "Persona")
                        .WithMany("Pagos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", "UsuarioConciliacion")
                        .WithMany("Pagos")
                        .HasForeignKey("UsuarioConciliacionId");

                    b.Navigation("Cuenta");

                    b.Navigation("EstadoPago");

                    b.Navigation("FormaPago");

                    b.Navigation("Persona");

                    b.Navigation("UsuarioConciliacion");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PersonaEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.PaisEntity", "TelefonoPais")
                        .WithMany()
                        .HasForeignKey("TelefonoPaisId");

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.TipoIdentificacionEntity", "TipoIdentificacion")
                        .WithMany("Personas")
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TelefonoPais");

                    b.Navigation("TipoIdentificacion");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.ReferidosPersonaEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.PersonaEntity", "Persona")
                        .WithMany("ReferidosPersona")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.RolMenuEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.DetalleEstadoEntity", null)
                        .WithMany("RolMenus")
                        .HasForeignKey("DetalleEstadoEntityId");

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.MenuEntity", "Menu")
                        .WithMany("RolesMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.RolEntity", "Rol")
                        .WithMany("RolesMenu")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.RolUsuarioEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.RolEntity", "Rol")
                        .WithMany("RolesUsuario")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", "Usuario")
                        .WithMany("RolesUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoIdentificacionEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.PaisEntity", "Pais")
                        .WithMany("TipoIdentificaciones")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.TipoPersonaEntiy", "TipoPersona")
                        .WithMany("TiposIdentificacion")
                        .HasForeignKey("TipoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", b =>
                {
                    b.HasOne("Soulsplit.Api.AccesoDatos.Contratos.PersonaEntity", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.BancoEntity", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.CuentaEntity", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.DetalleEstadoEntity", b =>
                {
                    b.Navigation("RolMenus");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.EstadoEnumeracionEntity", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.FormaPagoEntity", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.FuncionalidadEntity", b =>
                {
                    b.Navigation("FuncionalidadesParametroSistema");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.MenuEntity", b =>
                {
                    b.Navigation("RolesMenus");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PagoEntity", b =>
                {
                    b.Navigation("HistorialPagos");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PaisEntity", b =>
                {
                    b.Navigation("TipoIdentificaciones");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.ParametroSistemaEntity", b =>
                {
                    b.Navigation("FuncionalidadesParametroSiste");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.PersonaEntity", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("ReferidosPersona");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.RolEntity", b =>
                {
                    b.Navigation("RolesMenu");

                    b.Navigation("RolesUsuario");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoCuentaEntity", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoIdentificacionEntity", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.TipoPersonaEntiy", b =>
                {
                    b.Navigation("TiposIdentificacion");
                });

            modelBuilder.Entity("Soulsplit.Api.AccesoDatos.Contratos.UsuarioEntity", b =>
                {
                    b.Navigation("AuditoriaAccesoUsuarios");

                    b.Navigation("Pagos");

                    b.Navigation("RolesUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
